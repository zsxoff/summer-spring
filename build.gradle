plugins {
    id 'org.springframework.boot' version '2.1.6.RELEASE'
    id 'java'
    id 'idea'
    id 'findbugs'
    id 'com.diffplug.gradle.spotless' version '3.23.1'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.routine'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

configurations {
    developmentOnly

    runtimeClasspath {
        extendsFrom developmentOnly
    }

    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    jcenter()

    flatDir {
        dirs 'libs'
    }
}

dependencies {
    annotationProcessor(
            'org.projectlombok:lombok:1.18.8'
    )

    compile(
            'org.projectlombok:lombok:1.18.8',
            'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.9.3',
            'com.oracle.jdbc:ojdbc8:18.3.0.0'
    )

    developmentOnly(
            'org.springframework.boot:spring-boot-devtools:2.1.6.RELEASE',
    )

    implementation(
            'org.springframework.boot:spring-boot-starter-web:2.1.6.RELEASE',
            'org.springframework.boot:spring-boot-starter-jdbc:2.1.6.RELEASE',
            'org.springframework.boot:spring-boot-starter-data-jpa:2.1.6.RELEASE'
    )

    testImplementation(
            'org.junit.jupiter:junit-jupiter-api:5.3.2',
            'org.springframework.boot:spring-boot-starter-test:2.1.6.RELEASE',
    )

    testRuntimeOnly(
            'org.junit.jupiter:junit-jupiter-engine:5.3.2',
            'org.junit.vintage:junit-vintage-engine:5.3.2',
            'org.junit.platform:junit-platform-launcher:1.4.2'
    )

    testCompile(
            'org.junit.jupiter:junit-jupiter-params:5.3.1',
    )
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

spotless {
    java {
        encoding 'UTF8'
        googleJavaFormat()
        indentWithTabs(2)
        indentWithSpaces(4)

        target project.fileTree(project.rootDir) {
            include '**/*.java'
        }
    }
}

findbugs {
    ignoreFailures = false
    effort = 'max'
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}